{"version":3,"file":"static/js/762.b473ef7c.chunk.js","mappings":"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","sources":["api/taskApi.js","pages/Home.jsx"],"sourcesContent":["import axios from \"./axiosInstance\";\r\n\r\nexport const getTaskApi = async (id)=>{\r\n    try{\r\n      const response = await axios.get(`/task/get/${id}`);\r\n      return response.data;\r\n    }catch(err){\r\n        throw err;\r\n    }\r\n}\r\n\r\nexport const addTaskApi = async (data)=>{\r\n    try{\r\n     const response = await axios.post(\"/task/add\", data);\r\n     return response.data;\r\n    }catch(err){\r\n        throw err;\r\n    }\r\n}\r\n\r\nexport const deleteTaskApi = async (id) =>{\r\n    try{\r\n      const response = await axios.delete(`/task/delete/${id}`);\r\n      return response.data;\r\n    }catch(err){\r\n        throw err;\r\n    }\r\n}\r\n\r\nexport const editTaskApi = async (id, data) =>{\r\n    try{\r\n     const response = await axios.put(`/task/edit/${id}`, data);\r\n     return response.data;\r\n    }catch(err){\r\n        throw err;\r\n    }\r\n}","\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { logoutUserApi } from '../api/userApi';\r\nimport { toast } from 'react-toastify';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTaskApi, deleteTaskApi, editTaskApi, getTaskApi } from '../api/taskApi';\r\nimport { addTodos, deleteTodos, editTodos, setTodos } from '../store/todoSlice';\r\nimport { DndContext, useDraggable, useDroppable} from '@dnd-kit/core';\r\nimport {FixedSizeList as List} from 'react-window';\r\n\r\nfunction DroppableColumn({ status, children }) {\r\n  const { setNodeRef } = useDroppable({\r\n    id: status,\r\n  });\r\n\r\n  return (\r\n    <div ref={setNodeRef} className=\"bg-gray-200 p-4 rounded min-h-[200px]\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DraggableTask({ task, onClick, onDelete }) {\r\n  const { attributes, listeners, setNodeRef, transform, transition } = useDraggable({\r\n    id: task._id,\r\n  });\r\n\r\n  const style = {\r\n    transform: transform\r\n      ? `translate3d(${transform.x}px, ${transform.y}px, 0)`\r\n      : undefined,\r\n    transition,\r\n    zIndex: transform ? 100 : 'auto',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      {...listeners}\r\n      {...attributes}\r\n      style={style}\r\n      onClick={onClick}\r\n      className=\"bg-white p-4 rounded shadow mb-3 hover:shadow-md cursor-pointer\"\r\n    >\r\n      <h3 className=\"font-bold\">{task.title}</h3>\r\n      <p>{task.description}</p>\r\n      <div className=\"text-xs text-gray-500 mt-2\">\r\n        <p><span className='text-sm text-gray-800 font-semibold'>Created:</span> {new Date(task.createdAt).toLocaleString()}</p>\r\n        <p><span className='text-sm text-gray-800 font-semibold'>Updated:</span> {new Date(task.updatedAt).toLocaleString()}</p>\r\n      </div>\r\n      <div className=\"flex justify-between mt-2\">\r\n        <span className=\"bg-blue-100 px-2 py-1 rounded text-xs\">{task.status}</span>\r\n        <div>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onClick(task);\r\n            }}\r\n            className=\"text-green-600 hover:text-green-800 text-sm\"\r\n            title=\"Edit Task\"\r\n          >\r\n            ✏️\r\n          </button>\r\n          <button \r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onDelete(task._id, e);\r\n            }} \r\n            className=\"text-red-500 text-xl ms-1\"\r\n          >\r\n            🗑\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction VirtualTaskList({tasks, onEdit, onDelete}){\r\n  const Row =({index, style})=>(\r\n    <DraggableTask\r\n     task={tasks[index]}\r\n     onClick={onEdit}\r\n     onDelete={onDelete}\r\n     style={style}\r\n    />\r\n  );\r\n  return (\r\n    <List\r\n    height={200}\r\n    itemCount={tasks.length}\r\n    itemSize={160}\r\n    width={'100%'}\r\n    className='no-scrollbar'\r\n    >{Row}</List>\r\n  )\r\n}\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.todos);\r\n\r\n  const [user, setUser] = useState(() => {\r\n    const userStore = localStorage.getItem('user');\r\n    return userStore ? JSON.parse(userStore) : null;\r\n  });\r\n\r\n  const [taskModal, setTaskModal] = useState(false);\r\n  const [IsTask, setIsTask] = useState({ title: '', description: '', status: 'Pending' });\r\n  const [editId, setEditId] = useState(null);\r\n  const [statusDropdownOpen, setStatusDropdownOpen] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const statusOptions = [\r\n    { label: 'Pending', value: 'Pending' },\r\n    { label: 'In Progress', value: 'In Progress' },\r\n    { label: 'Completed', value: 'Completed' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!user) navigate('/login');\r\n    else setUser(user);\r\n  }, []);\r\n\r\n  const loadTasks = async () => {\r\n    try {\r\n      const res = await getTaskApi(user._id);\r\n      dispatch(setTodos(res?.task));\r\n    } catch (err) {\r\n      toast.error('Failed to load tasks');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, [dispatch]);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logoutUserApi();\r\n      localStorage.clear();\r\n      navigate('/login');\r\n    } catch (err) {\r\n      toast.error('Logout Failed..!');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!IsTask.title || !IsTask.description) return toast.error('Fill all Fields..!');\r\n\r\n    try {\r\n      if (editId) {\r\n        const res = await editTaskApi(editId, IsTask);\r\n        dispatch(editTodos(res?.task));\r\n        toast.success('Task updated successfully!');\r\n      } else {\r\n        const res = await addTaskApi(IsTask);\r\n        dispatch(addTodos(res?.task));\r\n        toast.success('Task added successfully!');\r\n      }\r\n      closeModal();\r\n    } catch (err) {\r\n      toast.error(err.response?.data?.message || 'Task operation failed');\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalVisible(false);\r\n    setTimeout(() => {\r\n      setTaskModal(false);\r\n      setIsTask({ title: '', description: '', status: 'Pending' });\r\n      setEditId(null);\r\n    }, 300);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setTaskModal(true);\r\n    setTimeout(() => setIsModalVisible(true), 10);\r\n  };\r\n\r\n  const handleDelete = async (id, e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    try {\r\n      await deleteTaskApi(id);\r\n      dispatch(deleteTodos(id));\r\n      toast.success('Task deleted successfully!');\r\n    } catch (err) {\r\n      toast.error(err.response?.data?.message || 'Task deletion failed');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    setEditId(task._id);\r\n    setIsTask({ title: task.title, description: task.description, status: task.status });\r\n    openModal();\r\n  };\r\n\r\n  const getTasksByStatus = (status) => {\r\n    return todos?.filter((task) => task.status === status) || [];\r\n  };\r\n\r\n  const handleDragEnd = async (event) => {\r\n    const { active, over } = event;\r\n    if (!over || active.id === over.id) return;\r\n\r\n    const draggedTask = todos.find((task) => task._id === active.id);\r\n    const newStatus = over.id;\r\n\r\n    if (draggedTask && draggedTask.status !== newStatus) {\r\n      try {\r\n        const res = await editTaskApi(active.id, { status: newStatus });\r\n        dispatch(editTodos(res?.task));\r\n        toast.success('Task moved');\r\n      } catch {\r\n        toast.error('Move failed');\r\n      } \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 min-h-screen bg-gray-100\">\r\n      <h1 className=\"text-2xl font-bold text-center my-8\">Task Management Board</h1>\r\n      <header className=\"flex flex-wrap justify-between items-center mb-8\">\r\n        <div className=\"w-3/4 mx-auto\">\r\n          <div className=\"bg-blue-400/5 py-4 px-6 rounded mb-4 sm:flex justify-between items-center border-blue-100 border\">\r\n            <p className=\"font-semibold\">\r\n              {user.firstName} {user.lastName}\r\n            </p>\r\n            <p className=\"font-semibold\">{user.email}</p>\r\n            <ul className=\"sm:pl-6 font-semibold\">\r\n              {user.numbers?.map((number, index) => (\r\n                <li key={index}>{number}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"mb-6 space-x-4 flex justify-end\">\r\n        <button\r\n          onClick={handleLogout}\r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n        >\r\n          Logout\r\n        </button>\r\n        <button\r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n          onClick={openModal}\r\n        >\r\n          + Add Task\r\n        </button>\r\n      </div>\r\n  \r\n      <DndContext\r\n        onDragEnd={handleDragEnd}\r\n      >\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          {statusOptions.map((status) => (\r\n            <DroppableColumn key={status.value} status={status.value}>\r\n              <h2 className=\"font-bold text-lg mb-4 flex justify-between items-center\">\r\n                {status.label}\r\n                <span className=\"bg-gray-300 px-2 py-1 rounded-full text-sm\">\r\n                  {getTasksByStatus(status.value).length || 0}\r\n                </span>\r\n              </h2>\r\n              {/* {getTasksByStatus(status.value).map((task) => (\r\n                <DraggableTask \r\n                  key={task._id} \r\n                  task={task} \r\n                  onClick={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))} */}\r\n              <VirtualTaskList\r\n               tasks={getTasksByStatus(status.value)}\r\n               onEdit={handleEdit}\r\n               onDelete={handleDelete}\r\n              />\r\n            </DroppableColumn>\r\n          ))}\r\n        </div>\r\n      </DndContext>\r\n\r\n      {taskModal && (\r\n        <div\r\n          className={`fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300 ${isModalVisible ? 'opacity-100' : 'opacity-0'}`}\r\n        >\r\n          <div\r\n            className={`bg-white rounded-lg shadow-xl w-full max-w-md p-8 transform transition-all duration-300 ${isModalVisible ? 'scale-100 opacity-100' : 'scale-95 opacity-0'}`}\r\n          >\r\n            <div className=\"flex justify-between items-center mb-5\">\r\n              <h2 className=\"text-xl font-semibold\">\r\n                {editId ? 'Edit Task' : 'Add New Task'}\r\n              </h2>\r\n              <button\r\n                onClick={closeModal}\r\n                className=\"text-gray-500 hover:text-gray-700\"\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-gray-700 mb-2\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={IsTask.title}\r\n                  onChange={(e) => setIsTask({ ...IsTask, title: e.target.value })}\r\n                  className=\"w-full p-2 border rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-gray-700 mb-2\">Description</label>\r\n                <textarea\r\n                  value={IsTask.description}\r\n                  onChange={(e) => setIsTask({ ...IsTask, description: e.target.value })}\r\n                  className=\"w-full p-2 border rounded\"\r\n                  rows=\"3\"\r\n                  required\r\n                ></textarea>\r\n              </div>\r\n\r\n              <div className=\"mb-4 relative\">\r\n                <label className=\"block text-gray-700 mb-2\">Status</label>\r\n                <div\r\n                  className='w-full p-2 border rounded cursor-pointer bg-white'\r\n                  onClick={() => setStatusDropdownOpen(!statusDropdownOpen)}\r\n                >{IsTask.status}</div>\r\n                {statusDropdownOpen && (\r\n                  <ul className='border rounded mt-2'>\r\n                    {statusOptions?.map((option) => (\r\n                      <li\r\n                        key={option.value}\r\n                        onClick={() => {\r\n                          setIsTask({ ...IsTask, status: option.value });\r\n                          setStatusDropdownOpen(false);\r\n                        }}\r\n                        className={`bg-blue-50 p-2 border-b border-blue-100 cursor-pointer hover:bg-blue-100 ${IsTask.status === option.value ? \"bg-blue-200 font-semibold\" : ''}`}\r\n                      >\r\n                        {option.label}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={closeModal}\r\n                  className=\"px-4 py-2 border rounded hover:bg-gray-100\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                >\r\n                  {editId ? 'Update Task' : 'Add Task'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["editTaskApi","async","id","data","axios","put","concat","err","DroppableColumn","_ref","status","children","setNodeRef","useDroppable","_jsx","ref","className","DraggableTask","_ref2","task","onClick","onDelete","attributes","listeners","transform","transition","useDraggable","_id","style","x","y","undefined","zIndex","_jsxs","_objectSpread","title","description","Date","createdAt","toLocaleString","updatedAt","e","stopPropagation","VirtualTaskList","_ref3","tasks","onEdit","List","height","itemCount","length","itemSize","width","_ref4","index","_user$numbers","navigate","useNavigate","dispatch","useDispatch","todos","useSelector","state","user","setUser","useState","userStore","localStorage","getItem","JSON","parse","taskModal","setTaskModal","IsTask","setIsTask","editId","setEditId","statusDropdownOpen","setStatusDropdownOpen","isModalVisible","setIsModalVisible","statusOptions","label","value","useEffect","loadTasks","res","get","getTaskApi","setTodos","toast","error","closeModal","setTimeout","openModal","handleDelete","preventDefault","delete","deleteTaskApi","deleteTodos","success","_err$response2","_err$response2$data","response","message","handleEdit","getTasksByStatus","filter","firstName","lastName","email","numbers","map","number","logoutUserApi","clear","DndContext","onDragEnd","active","over","event","draggedTask","find","newStatus","editTodos","_unused","onSubmit","post","addTaskApi","addTodos","_err$response","_err$response$data","type","onChange","target","required","rows","option"],"sourceRoot":""}